# This is a basic workflow to help you get started with Actions
name: Docker Image Publishing

# Controls when the workflow will run
on:
  release:
    types: [published]



jobs:
  push_to_registry:
    name: Push Docker image to github container registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
   
      steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            PassiveDNS/passive-dns-api:latest 
            PassiveDNS/passive-dns-scheduler:latest
            PassiveDNS/passive-dns-front:latest
            ghcr.io/${{ github.repository }}
  
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./extras/docker/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Build and push scheduler image
        uses: docker/build-push-action@v5
        with:
          context: ./scheduler
          push: true
          file: ./docker/Dockerfile
          tags: ghcr.io/${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Build and push front image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./docker/prod/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          